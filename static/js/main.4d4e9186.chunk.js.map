{"version":3,"sources":["components/intervalTimer/timer.module.css","components/pageNotFound/PageNotFound.module.css","App.module.css","components/intervalTimer/CETimer.jsx","components/pageNotFound/PageNotFound.jsx","App.js","index.js"],"names":["module","exports","padNumber","num","length","String","padStart","timeFormat","min","Math","floor","sec","FATIGUE","CREST","REST","FIRST","CETimer","useState","custom","sidebar","setSidebar","newPlay","setNewPlay","metronome","setMetronome","playToPause","setPlayToPause","setMin","setSec","elapsed","setElapsed","round","setRound","remain","setRemain","fatigueRest","setFatigueRest","_initTime","useRef","_intervalTime","_intervalCSet","_intervalSet","_interval","inCSet","setInCSet","inCEs","setInCEs","inCRs","setInCRs","inRs","setInRs","inSet","setInSet","audioPlay","document","getElementById","load","muted","play","tiktak","setInitTime","parseInt","current","setInitInterval","setInterval","_elapsed","useEffect","clearInterval","_round","className","style","container","status","menu","onClick","line","metronomeBtn","metronomeBtnCheck","content","hidden","setbarContainer","setbar","setTitle","input","type","name","placeholder","value","onChange","e","target","color","timer","background","ceil","btn","src","process","alt","boardContainer","boardSet","boardList","Array","fill","map","v","idx","boardCE","boardFRS","boardRS","id","autoPlay","React","memo","PageNotFound","cloud","bg","href","App","location","ancestorOrigins","includes","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4d4e9186.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"timer_container__1Ce0Z\",\"settingIcon\":\"timer_settingIcon__18h_Z\",\"setbar\":\"timer_setbar__2UAf8\",\"setTitle\":\"timer_setTitle__X0gmQ\",\"content\":\"timer_content__1NRM6\",\"bar\":\"timer_bar__1TV7Z\",\"bar_none\":\"timer_bar_none__31LlD\",\"tabs\":\"timer_tabs__1qqJF\",\"btn\":\"timer_btn__3LBlW\",\"timer\":\"timer_timer__3R07L\",\"status\":\"timer_status__z9mMU\",\"metronomeBtn\":\"timer_metronomeBtn__UmoGi\",\"metronomeBtnCheck\":\"timer_metronomeBtnCheck__2W0yC\",\"menu\":\"timer_menu__2MCga\",\"line\":\"timer_line__3UPLF\",\"boardContainer\":\"timer_boardContainer__1SCIT\",\"boardList\":\"timer_boardList__2BovW\",\"boardSet\":\"timer_boardSet__3ZTyn\",\"boardCE\":\"timer_boardCE__2kxwy\",\"boardRS\":\"timer_boardRS__1SeFI\",\"boardFRS\":\"timer_boardFRS__2s3yU\",\"setbarContainer\":\"timer_setbarContainer__1rRk2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PageNotFound_container__6JR67\",\"cloud\":\"PageNotFound_cloud__3J369\",\"bg\":\"PageNotFound_bg__1fFYX\",\"found\":\"PageNotFound_found__2T39m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuBar\":\"App_menuBar__3CNGe\",\"tabs\":\"App_tabs__2eJA1\"};","import React, { useState, useEffect, useRef, } from 'react';\r\nimport style from './timer.module.css';\r\n\r\nconst padNumber = (num, length) => {\r\n  return String(num).padStart(length, '0');\r\n};\r\n\r\nconst timeFormat = (num) => {\r\n  const min = padNumber(Math.floor(num / 60), 2)\r\n  const sec = padNumber(Math.floor(num % 60), 2)\r\n  return String(min + \":\" + sec)\r\n}\r\n\r\nconst FATIGUE = 'FATIGUE'\r\nconst CREST = 'CREST'\r\nconst REST = 'REST'\r\nconst FIRST = 'FIRST'\r\n\r\nconst CETimer = () => {\r\n  const [custom, setCustom] = useState(false)\r\n  const [sidebar, setSidebar] = useState(false)\r\n  //button\r\n  const [newPlay, setNewPlay] = useState(true);\r\n  const [metronome, setMetronome] = useState(false);\r\n  const [playToPause, setPlayToPause] = useState(true);\r\n\r\n  // 표시\r\n  const [min, setMin] = useState(padNumber(0, 2));\r\n  const [sec, setSec] = useState(padNumber(0, 2));\r\n  const [elapsed, setElapsed] = useState(0);\r\n  const [round, setRound] = useState(0);\r\n  const [remain, setRemain] = useState(0);\r\n  const [fatigueRest, setFatigueRest] = useState(FATIGUE);\r\n\r\n  // time\r\n  const _initTime = useRef(0);\r\n  const _intervalTime = useRef(0);\r\n  const _intervalCSet = useRef(0);\r\n  const _intervalSet = useRef(0);\r\n  const _interval = useRef(null);\r\n\r\n  //CE input\r\n  const [inCSet, setInCSet] = useState();\r\n  const [inCEs, setInCEs] = useState();\r\n  const [inCRs, setInCRs] = useState();\r\n  const [inRs, setInRs] = useState();\r\n  const [inSet, setInSet] = useState();\r\n\r\n  // audio플레이\r\n  const audioPlay = () => {\r\n    document.getElementById('intervalstartsound').load()\r\n    document.getElementById('intervalstartsound').muted = true\r\n    document.getElementById('intervalstartsound').play()\r\n\r\n    document.getElementById('intervalstartsound').muted = false\r\n    document.getElementById('intervalstartsound').play()\r\n  }\r\n\r\n  const tiktak = () => {\r\n    document.getElementById('tak').load()\r\n    document.getElementById('tak').muted = true\r\n    document.getElementById('tak').play()\r\n\r\n\r\n    if (!newPlay) {\r\n      if (metronome) {\r\n        document.getElementById('tak').muted = false\r\n        document.getElementById('tak').play()\r\n      }\r\n    }\r\n  }\r\n\r\n  // start Time\r\n  const startTime = () => {\r\n    if (inCEs > 0 && inCRs > 0) {\r\n      setPlayToPause(false);\r\n      if (newPlay) {\r\n        _intervalTime.current = 10\r\n        setFatigueRest(FIRST);\r\n        setNewPlay(false);\r\n      }\r\n      setInitInterval();\r\n      return () => clearInterval(_interval.current);\r\n    }\r\n  }\r\n\r\n  // reset\r\n  const resetTime = () => {\r\n    setNewPlay(true);\r\n    setInitTime();\r\n  }\r\n\r\n  //initTime 설정\r\n  const setInitTime = () => {\r\n    setRound(1);\r\n    setSec(padNumber(0, 2));\r\n    setMin(padNumber(parseInt(0), 2));\r\n    setElapsed(0)\r\n    setRemain(0)\r\n\r\n    if (inCEs >= 1) {\r\n      _initTime.current = ((inCEs + inCRs) * inCSet) * inSet + inRs\r\n      _intervalTime.current = inCEs\r\n      setFatigueRest(CREST)\r\n      _intervalSet.current = inSet\r\n      _intervalCSet.current = (inCSet * 2) - 1;\r\n    } else {\r\n      _initTime.current = (inCEs + inCRs) * inSet + inRs\r\n      _intervalTime.current = _initTime.current\r\n    }\r\n  }\r\n\r\n  //initialTimer 설정\r\n  const setInitInterval = () => {\r\n    audioPlay()\r\n    tiktak()\r\n\r\n    _interval.current = setInterval(() => {\r\n      _initTime.current -= 1;\r\n      _intervalTime.current -= 1;\r\n      setSec(padNumber(_intervalTime.current % 60, 2));\r\n      setMin(padNumber(parseInt(_intervalTime.current / 60), 2));\r\n      setElapsed(_elapsed => _elapsed + 1)\r\n      setRemain(_initTime.current)\r\n    }, 1000);\r\n  }\r\n\r\n  //타이머 정지\r\n  const stopTime = () => {\r\n    setPlayToPause(true);\r\n    clearInterval(_interval.current);\r\n  }\r\n\r\n  // 초가 변할 때만 실행되는 useEffect\r\n  // initialTime을 검사해서 0이 되면 interval을 멈춘다.\r\n  useEffect(() => {\r\n    if (fatigueRest == FIRST) {\r\n      if (_intervalTime.current <= 0) {\r\n        setInitTime();\r\n        audioPlay(0.1);\r\n      } else if (_intervalTime.current <= 2) {\r\n        audioPlay();\r\n      }\r\n    }\r\n    else if (_intervalTime.current === 0 && !newPlay) {\r\n      _intervalCSet.current -= 1;\r\n      if (_intervalCSet.current <= 0) {\r\n        _intervalSet.current -= 1;\r\n        if (_intervalSet.current <= 0) {\r\n          setNewPlay(true);\r\n          setPlayToPause(true);\r\n          clearInterval(_interval.current);\r\n          audioPlay();\r\n        } else {\r\n          _intervalCSet.current = (inCSet * 2);\r\n          _intervalTime.current = inRs\r\n          setFatigueRest(REST)\r\n          setRound(_round => _round += 1)\r\n          setSec(padNumber(_intervalTime.current % 60, 2));\r\n          setMin(padNumber(parseInt(_intervalTime.current / 60), 2));\r\n          audioPlay();\r\n        }\r\n      } else {\r\n        if (fatigueRest == FATIGUE || fatigueRest == REST) {\r\n          _intervalTime.current = inCEs\r\n          setFatigueRest(CREST)\r\n        } else {\r\n          _intervalTime.current = inCRs\r\n          setFatigueRest(FATIGUE)\r\n        }\r\n        setRound(_round => _round += 1)\r\n        setSec(padNumber(_intervalTime.current % 60, 2));\r\n        setMin(padNumber(parseInt(_intervalTime.current / 60), 2));\r\n        audioPlay();\r\n      }\r\n    }\r\n\r\n    if (!newPlay) {\r\n      if (_intervalTime.current != inCEs)\r\n        tiktak()\r\n    }\r\n  }, [sec, metronome]);\r\n\r\n  const inputChangeCSet = e => {\r\n    setInCSet(e.target.value)\r\n    if (e.target.value > 0)\r\n      setInCSet(parseInt(e.target.value))\r\n  }\r\n  const inputChangeCEs = e => {\r\n    setInCEs(e.target.value)\r\n    if (e.target.value > 0)\r\n      setInCEs(parseInt(e.target.value))\r\n  }\r\n  const inputChangeCRs = e => {\r\n    setInCRs(e.target.value)\r\n    if (e.target.value > 0)\r\n      setInCRs(parseInt(e.target.value))\r\n  }\r\n  const inputChangeRs = e => {\r\n    setInRs(e.target.value)\r\n    if (e.target.value > 0)\r\n      setInRs(parseInt(e.target.value))\r\n  }\r\n  const inputChangeSet = e => {\r\n    setInSet(e.target.value)\r\n    if (e.target.value > 0)\r\n      setInSet(parseInt(e.target.value))\r\n  }\r\n\r\n  //라운드 진행 상황\r\n  const boardList = () => {\r\n    const list = []\r\n    list.push(\r\n    )\r\n    return list\r\n  }\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.status}>\r\n        <div\r\n          className={style.menu}\r\n          onClick={() => setSidebar(false)}\r\n        >\r\n          <span>\r\n            Menu\r\n          </span>\r\n          <div>\r\n            <div className={style.line}></div>\r\n            <div className={style.line}></div>\r\n            <div className={style.line}></div>\r\n          </div>\r\n        </div>\r\n        <div className={!metronome ? style.metronomeBtn : `${style.metronomeBtn} ${style.metronomeBtnCheck}`}>\r\n          <div\r\n            onClick={() => setMetronome(!metronome)}>\r\n            Metronome\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          if (!sidebar)\r\n            setSidebar(true)\r\n        }}>\r\n        <div className={style.content} >\r\n          <div hidden={custom}>\r\n            <div className={style.setbarContainer}>\r\n              <div className={style.setbar}>\r\n                <span className={style.setTitle}>\r\n                  Cluster Eccentric\r\n                </span>\r\n                <input\r\n                  className={style.input}\r\n                  type=\"Number\"\r\n                  name=\"CEs\"\r\n                  placeholder='Sec'\r\n                  value={inCEs || ''}\r\n                  onChange={inputChangeCEs}\r\n                />\r\n              </div>\r\n              <div className={style.setbar}>\r\n                <span className={style.setTitle}>\r\n                  Cluster Rest Interval\r\n                </span>\r\n                <input\r\n                  className={style.input}\r\n                  type=\"Number\"\r\n                  name=\"CRs\"\r\n                  placeholder='Sec'\r\n                  value={inCRs || ''}\r\n                  onChange={inputChangeCRs}\r\n                />\r\n              </div>\r\n              <div className={style.setbar}>\r\n                <span className={style.setTitle}>\r\n                  Cluster Set\r\n                </span>\r\n                <input\r\n                  className={style.input}\r\n                  type=\"Number\"\r\n                  name=\"C-Set\"\r\n                  placeholder='Set'\r\n                  value={inCSet || ''}\r\n                  onChange={inputChangeCSet}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={style.setbarContainer}>\r\n              <div className={style.setbar}>\r\n                <span className={style.setTitle}>\r\n                  Rest Interval\r\n                </span>\r\n                <input\r\n                  className={style.input}\r\n                  type=\"Number\"\r\n                  name=\"Rs\"\r\n                  placeholder='Sec'\r\n                  value={inRs || ''}\r\n                  onChange={inputChangeRs}\r\n                />\r\n              </div>\r\n              <div className={style.setbar}>\r\n                <span className={style.setTitle}>\r\n                  Total Set\r\n                </span>\r\n                <input\r\n                  className={style.input}\r\n                  type=\"Number\"\r\n                  name=\"Set\"\r\n                  placeholder='Set'\r\n                  value={inSet || ''}\r\n                  onChange={inputChangeSet}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr color='#333' />\r\n\r\n          <div className={style.timer}\r\n\r\n            style={{\r\n              background:\r\n                !newPlay\r\n                  ? fatigueRest != FIRST\r\n                    ? fatigueRest == REST\r\n                      ? '#CC2030'\r\n                      : fatigueRest != CREST\r\n                        ? '#20CC30'\r\n                        : '#222'\r\n                    : '#CC2030'\r\n                  : '#222'\r\n            }}>\r\n            {min}:{sec}\r\n          </div>\r\n          <div className={style.status}\r\n            style={{\r\n              background:\r\n                !newPlay\r\n                  ? fatigueRest != FIRST\r\n                    ? fatigueRest == REST\r\n                      ? '#CC2030'\r\n                      : fatigueRest != CREST\r\n                        ? '#20CC30'\r\n                        : '#222'\r\n                    : '#CC2030'\r\n                  : '#222'\r\n            }}>\r\n            <div>\r\n              <h3>Elapsed</h3>\r\n              <p>{timeFormat(elapsed)}</p>\r\n            </div>\r\n            <div>\r\n              <h3>Intervals</h3>\r\n              <p>{remain - inCRs >= 0 ? Math.ceil(round / 2) + \"/\" + inCSet * inSet : '0 / 0'}</p>\r\n            </div>\r\n            <div>\r\n              <h3>Remaining</h3>\r\n              <p>{remain - inCRs >= 0 ? timeFormat(remain - inCRs) : '00:00'}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <hr color='#333' />\r\n          <div className={style.status}>\r\n            <div>\r\n              <img\r\n                className={style.btn}\r\n                src={process.env.PUBLIC_URL + '/images/reset.svg'}\r\n                onClick={resetTime}\r\n                alt='reset' />\r\n            </div>\r\n\r\n            <hr color='#333' />\r\n\r\n            {fatigueRest != FIRST ?\r\n              inCSet >= 0 && inSet >= 0 ?\r\n                fatigueRest != REST ?\r\n                  <div className={style.boardContainer}>\r\n                    <div className={style.boardSet}>\r\n                      {inSet - _intervalSet.current + 1} Set\r\n                    </div>\r\n                    <div className={style.boardList}>\r\n                      {\r\n                        Array(inCSet).fill('').map((v, idx) =>\r\n                          <>\r\n                            <div className={\r\n                              (inCSet * 2) - _intervalCSet.current <= idx * 2 ?\r\n                                style.boardCE : style.boardFRS\r\n                            }>\r\n                              {idx + 1}CE\r\n                            </div>\r\n                            <div className={\r\n                              (inCSet * 2) - _intervalCSet.current <= idx * 2 + 1 ?\r\n                                style.boardRS : style.boardFRS\r\n                            }>\r\n                              RS\r\n                            </div>\r\n                          </>\r\n                        )\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                  :\r\n                  <div className={style.boardFRS}>\r\n                    <p>REST</p>\r\n                  </div>\r\n                : <div className={style.boardContainer}></div>\r\n              :\r\n              <div className={style.boardFRS}>\r\n                <p>READY</p>\r\n              </div>\r\n            }\r\n            <hr color='#333' />\r\n            <div>\r\n              <img\r\n                className={style.btn}\r\n                src={process.env.PUBLIC_URL + '/images/start.svg'}\r\n                onClick={startTime}\r\n                hidden={!playToPause}\r\n                alt='play' />\r\n              <img\r\n                className={style.btn}\r\n                src={process.env.PUBLIC_URL + '/images/pause.svg'}\r\n                onClick={stopTime}\r\n                hidden={playToPause}\r\n                alt='stop' />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <audio id=\"tik\" >\r\n            <source src={process.env.PUBLIC_URL + '/sounds/beep.mp3'} type=\"audio/mp3\" autoPlay muted />\r\n          </audio>\r\n          <audio id=\"tak\" >\r\n            <source src={process.env.PUBLIC_URL + '/sounds/beep.mp3'} type=\"audio/mp3\" autoPlay muted />\r\n          </audio>\r\n          <audio id=\"intervalstartsound\" >\r\n            <source src={process.env.PUBLIC_URL + '/sounds/beep.wav'} type=\"audio/mp3\" autoPlay muted />\r\n          </audio>\r\n          <audio id=\"intervalsound\">\r\n            <source src=\"https://www.intervaltimer.com/sounds/a6-sine-750ms.mp3\" type=\"audio/mp3\" autoPlay muted />\r\n          </audio>\r\n          <audio id=\"intervalendsound\">\r\n            <source src=\"https://www.intervaltimer.com/sounds/a6-sine-750ms-end.mp3\" type=\"audio/mp3\" autoPlay muted />\r\n          </audio>\r\n        </div>\r\n      </div >\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default React.memo(CETimer);\r\n","import style from './PageNotFound.module.css';\r\nimport React from 'react';\r\n\r\nconst PageNotFound = () => {\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.cloud}>\r\n        <div className={style.bg}>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n        <h1>oops!</h1>\r\n        <h2>Page Not Found</h2>\r\n        <a href=\"https://xingmove.com/\">Home</a>\r\n        <a href=\"https://www.instagram.com/xingmove_ground/\">Insta</a>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\nexport default React.memo(PageNotFound);\r\n","import style from './App.module.css';\r\nimport React, { useState, useEffect, useRef, } from 'react';\r\nimport FRTimer from './components/intervalTimer/FRTimer';\r\nimport MsmTimer from './components/intervalTimer/MsmTimer';\r\nimport CETimer from './components/intervalTimer/CETimer';\r\nimport PageNotFound from './components/pageNotFound/PageNotFound';\r\nconst App = () => {\r\n\r\n  const [tabIdx, setTabIdx] = useState(1);\r\n\r\n  const tabData = (idx) => {\r\n    switch (idx) {\r\n      //NewVer\r\n      case 1:\r\n        return <MsmTimer />\r\n\r\n      case 2:\r\n        return <FRTimer />\r\n\r\n      case 3:\r\n        return <CETimer />\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  // console.log(document.location.ancestorOrigins.first)\r\n  // console.log(document.location.ancestorOrigins)\r\n  return (\r\n    <div>\r\n      {/* <div className={style.menuBar}>\r\n        <ul className={style.tabs}>\r\n          <li style={{ backgroundColor: tabIdx == 1 ? '#222' : '' }} onClick={() => setTabIdx(1)}>MSM</li>\r\n          <li style={{ backgroundColor: tabIdx == 2 ? '#222' : '' }} onClick={() => setTabIdx(2)}>FRT</li>\r\n          <li style={{ backgroundColor: tabIdx == 3 ? '#222' : '' }} onClick={() => setTabIdx(3)}>CE</li>\r\n        </ul>\r\n      </div> */}\r\n      <div >\r\n        {/* {tabData(tabIdx)} */}\r\n        {typeof document.location.ancestorOrigins[0] != \"undefined\" && document.location.ancestorOrigins[0].includes(\"xingmove.com\") ?\r\n          <CETimer />\r\n          : <PageNotFound />\r\n        }\r\n\r\n        {/* <iframe src='http://13.125.227.52/xmove/'></iframe> */}\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default React.memo(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}